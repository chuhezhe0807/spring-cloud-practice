spring:
  cloud:
    openfeign:
      client:
        config:
          default:                  # feign客户端的默认配置
            logger-level: full
            connect-timeout: 1000
            read-timeout: 1000
          server-product:           # feign 客户端的名称 @FeignClient 注解中的value或contextId，没有指定contextId时就是value
            logger-level: full      # 日志级别
            connect-timeout: 3000   # 连接超时时间
            read-timeout: 5000      # 读取超时时间，远程调用的请求处理的时间
#            request-interceptors:  # 仅对当前设置的客户端有效
#              - com.chuhezhe.order.interceptor.XTokenRequestInterceptor
    sentinel:
      transport:
        dashboard: localhost:8080
      eager: true # sentinel 的微服务列表是懒加载的，只有发送请求后才会进行展示，eager为true，可以使其提前加载
      web-context-unify: false # 是否统一web的上下文，相当于要不要分割请求链路，默认的请求都属于一个 sentinel_spring_web_context，配置true后相当于再开一个上下文

feign:
  sentinel:
    enabled: true # 开启后，远程调用失败后，就会自动走 @FeignClient 设置的 fallback
